webpackJsonp([0xfa19a0a1d420],{482:function(e,t){e.exports={data:{site:{siteMetadata:{title:"To kill a mocking bug",subtitle:"Unearthing curious .NET behaviour",copyright:"Â© All rights reserved.",menu:[{label:"Articles",path:"/"},{label:"Projects",path:"/projects/"}],author:{name:"Jeroen Vannevel",email:"jer_vannevel@outlook.com",twitter:"VannevelJeroen",github:"Vannevelj"}}},allMarkdownRemark:{edges:[{node:{fields:{slug:"/posts/using-taskcompletionsource-to-change-the-semantics-of-async-calls",categorySlug:"/categories/performance/"},frontmatter:{title:"Using TaskCompletionSource to change the semantics of async calls",date:"2020-03-22T13:00:00.000Z",category:"Performance",description:"We need to asynchronously call external processes and proceed when we have a result. How do we do that without requiring a re-architecture of our entire iterative system?"}}},{node:{fields:{slug:"/posts/here-be-dragons-string-concatenation/",categorySlug:"/categories/performance/"},frontmatter:{title:"Here be dragons: string concatenation",date:"2015-09-17T00:00:00.000Z",category:"Performance",description:"String concatenation can be done in several ways, each with their own advantages and usecases. In this blogpost I will take a closer look at 4 different ways of concatenating strings and how these are implemented internally. At the end of this post I hope I will have made clear when they are useful, when they are not and how they compare to eachother implementation-wise."}}}]}},pathContext:{category:"Performance"}}}});
//# sourceMappingURL=path---categories-performance-e69f402f4da7e8f86e3e.js.map